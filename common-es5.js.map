{"version":3,"sources":["D:/Angular/Libraries/ngx-form-group-validator/node_modules/highlight.js/lib/languages/css.js","D:/Angular/Libraries/ngx-form-group-validator/node_modules/highlight.js/lib/languages/javascript.js","D:/Angular/Libraries/ngx-form-group-validator/node_modules/highlight.js/lib/languages/json.js","D:/Angular/Libraries/ngx-form-group-validator/node_modules/highlight.js/lib/languages/typescript.js","D:/Angular/Libraries/ngx-form-group-validator/node_modules/highlight.js/lib/languages/xml.js"],"names":[],"mappings":"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","sourcesContent":["module.exports = function(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/, returnBegin: true,\n    contains: [\n      {\n        className: 'built_in',\n        begin: /[\\w-]+/\n      },\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.CSS_NUMBER_MODE,\n        ]\n      }\n    ]\n  }\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/, end: ':', excludeEnd: true,\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION_LIKE,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'number', begin: '#[0-9A-Fa-f]+'\n        },\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  }\n  var AT_IDENTIFIER = '@[a-z-]+' // @font-face\n  var AT_MODIFIERS = \"and or not only\"\n  var MEDIA_TYPES = \"all print screen speech\"\n  var AT_PROPERTY_RE = /@\\-?\\w[\\w]*(\\-\\w+)*/ // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      ATTRIBUTE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n        ]\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        lexemes: AT_IDENTIFIER,\n        keywords: '@page @font-face'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            keywords: AT_MODIFIERS,\n            contains: [\n              {\n                begin: /[a-z-]+:/,\n                className:\"attribute\"\n              },\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n};","module.exports = function(hljs) {\n  var FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  var XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/\n  };\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in of if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await static ' +\n      // ECMAScript 6 modules import\n      'import from as'\n    ,\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Promise'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)n?' },\n      { begin: '\\\\b(0[oO][0-7]+)n?' },\n      { begin: hljs.C_NUMBER_RE + 'n?' }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var HTML_TEMPLATE = {\n    begin: 'html`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml',\n    }\n  };\n  var CSS_TEMPLATE = {\n    begin: 'css`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css',\n    }\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [\n            {\n              className : 'doctag',\n              begin : '@[A-Za-z]+',\n              contains : [\n                {\n                  className: 'type',\n                  begin: '\\\\{',\n                  end: '\\\\}',\n                  relevance: 0\n                },\n                {\n                  className: 'variable',\n                  begin: IDENT_RE + '(?=\\\\s*(-)|$)',\n                  endsParent: true,\n                  relevance: 0\n                },\n                // eat spaces (not newlines) so we can find\n                // types or variables\n                {\n                  begin: /(?=[^\\n])\\s/,\n                  relevance: 0\n                },\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: /[{,\\n]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            className: '',\n            begin: /\\s/,\n            end: /\\s*/,\n            skip: true,\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { begin: XML_TAG.begin, end: XML_TAG.end }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin, end: XML_TAG.end, skip: true,\n                contains: ['self']\n              }\n            ]\n          },\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor get set', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};","module.exports = function(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var ALLOWED_COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE\n  ]\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ].concat(ALLOWED_COMMENTS),\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.push(OBJECT, ARRAY);\n  ALLOWED_COMMENTS.forEach(function(rule) {\n    TYPES.push(rule)\n  })\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n};","module.exports = function(hljs) {\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const class public private protected get set super ' +\n      'static implements enum export import declare type namespace abstract ' +\n      'as from extends async await',\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document any number boolean string void Promise'\n  };\n\n  var DECORATOR = {\n    className: 'meta',\n    begin: '@' + JS_IDENT_RE,\n  };\n\n  var ARGS =\n  {\n    begin: '\\\\(',\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      'self',\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      DECORATOR,\n      ARGS\n    ]\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)n?' },\n      { begin: '\\\\b(0[oO][0-7]+)n?' },\n      { begin: hljs.C_NUMBER_RE + 'n?' }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var HTML_TEMPLATE = {\n    begin: 'html`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml',\n    }\n  };\n  var CSS_TEMPLATE = {\n    begin: 'css`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css',\n    }\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n\n\n\n  return {\n    aliases: ['ts'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: /^\\s*['\"]use strict['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + hljs.IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: [\n                      'self',\n                      hljs.C_LINE_COMMENT_MODE,\n                      hljs.C_BLOCK_COMMENT_MODE\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /[\\{;]/, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE }),\n          PARAMS\n        ],\n        illegal: /%/,\n        relevance: 0 // () => {} is more typical in TypeScript\n      },\n      {\n        beginKeywords: 'constructor', end: /[\\{;]/, excludeEnd: true,\n        contains: [\n          'self',\n          PARAMS\n        ]\n      },\n      { // prevent references like module.id from being higlighted as module definitions\n        begin: /module\\./,\n        keywords: { built_in: 'module' },\n        relevance: 0\n      },\n      {\n        beginKeywords: 'module', end: /\\{/, excludeEnd: true\n      },\n      {\n        beginKeywords: 'interface', end: /\\{/, excludeEnd: true,\n        keywords: 'interface extends'\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      {\n        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n      },\n      DECORATOR,\n      ARGS\n    ]\n  };\n};","module.exports = function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var XML_ENTITIES = {\n    className: 'symbol',\n    begin: '&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;'\n  };\n  var XML_META_KEYWORDS = {\n\t  begin: '\\\\s',\n\t  contains:[\n\t    {\n\t      className: 'meta-keyword',\n\t      begin: '#?[a-z_][a-z1-9_-]+',\n\t      illegal: '\\\\n',\n      }\n\t  ]\n  };\n  var XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {begin: '\\\\(', end: '\\\\)'});\n  var APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {className: 'meta-string'});\n  var QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'});\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/, contains: [XML_ENTITIES]},\n              {begin: /'/, end: /'/, contains: [XML_ENTITIES]},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<![a-z]', end: '>',\n        relevance: 10,\n        contains: [\n\t\t\t\t  XML_META_KEYWORDS,\n\t\t\t\t  QUOTE_META_STRING_MODE,\n\t\t\t\t  APOS_META_STRING_MODE,\n\t\t\t\t\tXML_META_PAR_KEYWORDS,\n\t\t\t\t\t{\n\t\t\t\t\t  begin: '\\\\[', end: '\\\\]',\n\t\t\t\t\t  contains:[\n\t\t\t\t\t\t  {\n\t\t\t\t\t      className: 'meta',\n\t\t\t\t\t      begin: '<![a-z]', end: '>',\n\t\t\t\t\t      contains: [\n\t\t\t\t\t        XML_META_KEYWORDS,\n\t\t\t\t\t        XML_META_PAR_KEYWORDS,\n\t\t\t\t\t        QUOTE_META_STRING_MODE,\n\t\t\t\t\t        APOS_META_STRING_MODE\n\t\t\t\t\t\t    ]\n\t\t\t        }\n\t\t\t\t\t  ]\n\t\t\t\t  }\n\t\t\t\t]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {begin: '/\\\\*', end: '\\\\*/', skip: true},\n          {begin: 'b\"', end: '\"', skip: true},\n          {begin: 'b\\'', end: '\\'', skip: true},\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null, className: null, contains: null, skip: true}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null, className: null, contains: null, skip: true})\n        ]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n};"],"sourceRoot":"webpack:///","file":"common-es5.js"}